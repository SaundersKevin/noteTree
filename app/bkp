{-# LANGUAGE OverloadedStrings #-}

import Control.Monad
import qualified Graphics.UI.Threepenny as UI
import Graphics.UI.Threepenny.Core
import qualified CMark as MD
import Data.Text
import System.Environment (getArgs)
import System.Directory (doesFileExist, getCurrentDirectory)

main :: IO ()
main = do
    args <- getArgs
    let filename = case args of
            (f:_) -> f
            _     -> "README.md"
    content <- readFile filename
    startGUI defaultConfig { jsPort = Just 8023 } (setup content)

setup :: String -> Window -> UI ()
setup mdText window = do
    -- Get just the path part of the URL (e.g. "/foo/bar")
    path <- callFunction $ ffi "window.location.pathname"

    liftIO $ print path
    liftIO $ getCurrentDirectory >>= print

    exists <- liftIO $ doesFileExist $ Prelude.tail path
    content <- if exists 
               then liftIO $ readFile $ Prelude.tail path
               else return $ "# 404\nFile not found"

    return window # set title "Markdown Viewer"

    let htmlContent = MD.commonmarkToHtml [] (pack content)

    markdownDiv <- UI.div # set UI.html (unpack htmlContent)
    _ <- getBody window #+ [element markdownDiv]
    return ()
